Test (2C): basic persistence ...
in func Make's goroutine, rf: 0 term: 0 launch Election
in func LeaderElection, rf: 0 rf.Term: 0 commitIndex: -1 length of logs: 0 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 1 ok: true okCnt: 1
get reply
in func leaderElection's goroutine, rf: 0 term 1 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 1 vote or not: true
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 1 vote or not: true
in func leaderElection, rf: 0 term: 1 commitIndex: -1 length of logs: 0 win election
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 , after args, index come
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 0 leader.Term 1
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 1 leader: 0 leader.Term 1
in func AppendEntries, rf: 2 term: 1 state: 3
in func AppendEntries, rf: 2 term: 1 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 1 leader: 0 leader.Term 1
in func AppendEntries, rf: 2 term: 1 state: 3
in func AppendEntries, rf: 2 term: 1 termOfPrevLogIndexInRf: 1
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 0 leader.Term 1
get reply
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 1 term: 1 launch Election
in func LeaderElection, rf: 1 rf.Term: 1 commitIndex: -1 length of logs: 1 begin election
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 1 term 2 ok: true okCnt: 1
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 1 term 2 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 2 vote or not: true
in func leaderElection, rf: 1 term: 2 commitIndex: -1 length of logs: 1 win election
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func LeaderElection's goroutine: candidate: 1 state: 1 voter: 0 term: 2 vote or not: true
in func one, nd: 0 cmd1: <nil> cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, index come
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 1
get reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 ok: true okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
get reply
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func one, nd: 3 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 1 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 begin one loop
leader1: 1
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 1 term: 2 launch Election
in func LeaderElection, rf: 1 rf.Term: 2 commitIndex: -1 length of logs: 2 begin election
in func Call: the request has been sent.
wait for reply
get reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 1 term 3 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 1 term 3 ok: true okCnt: 1
in func leaderElection, rf: 1 term: 3 commitIndex: -1 length of logs: 2 win election
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 3 vote or not: true
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 0 term: 3 vote or not: true
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 ok: true okCnt: 1
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func one, nd: 3 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
get reply
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
get reply
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
get reply
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 1 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 begin one loop
leader2: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 0 term: 3 launch Election
in func LeaderElection, rf: 0 rf.Term: 3 commitIndex: 2 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 4 vote or not: true
in func leaderElection, rf: 0 term: 4 commitIndex: 2 length of logs: 3 win election
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 14 cmd: 14 index: 4
after connect leader2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: false okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 2
in func LeaderElection's goroutine: candidate: 0 state: 1 voter: 1 term: 4 vote or not: true
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 1 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func Make's goroutine, rf: 1 term: 4 launch Election
in func LeaderElection, rf: 1 rf.Term: 4 commitIndex: -1 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 5 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 0 term: 5 vote or not: false
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 5 vote or not: false
in func LeaderElection, rf: 1 rf.Term: 5 commitIndex: -1 length of logs: 3 not become leader, sleep for a while
get reply
in func heartbeat2's goroutine, sender: 0 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 2 term: 5 launch Election
in func LeaderElection, rf: 2 rf.Term: 5 commitIndex: 3 length of logs: 4 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 6 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 6 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 0 term: 6 vote or not: true
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 6 vote or not: true
in func leaderElection, rf: 2 term: 6 commitIndex: 3 length of logs: 4 win election
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 3 receiver: 1 ok: false okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 3 receiver: 1 sendAppendEntries appendlog fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 1 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
wait for reply
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func Call: the request has been sent.
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
get reply
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 0 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 2 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 0 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 6 state: 1 receiver: 0 begin one loop
--- FAIL: TestPersist12C (35.31s)
    config.go:422: only 2 decided for index 4; wanted 3
FAIL
exit status 1
FAIL	6.824_new/src/raft	35.309s
sleep for a while

Test (2C): basic persistence ...
in func Make's goroutine, rf: 2 term: 0 launch Election
in func LeaderElection, rf: 2 rf.Term: 0 commitIndex: -1 length of logs: 0 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 1 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 1 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 0 term: 1 vote or not: true
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 1 vote or not: true
in func leaderElection, rf: 2 term: 1 commitIndex: -1 length of logs: 0 win election
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: 1
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 2 leader.Term 1
get reply
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 3 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 2 term: 1 launch Election
in func LeaderElection, rf: 2 rf.Term: 1 commitIndex: -1 length of logs: 1 begin election
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 2 term 2 ok: true okCnt: 1
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 2 term 2 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 2 vote or not: true
in func leaderElection, rf: 2 term: 2 commitIndex: -1 length of logs: 1 win election
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func LeaderElection's goroutine: candidate: 2 state: 1 voter: 0 term: 2 vote or not: true
in func one, nd: 0 cmd1: <nil> cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 1
get reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 ok: true okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
get reply
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
leader1: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 2 term: 2 launch Election
in func LeaderElection, rf: 2 rf.Term: 2 commitIndex: -1 length of logs: 2 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 3 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 3 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 0 term: 3 vote or not: true
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 3 vote or not: true
in func leaderElection, rf: 2 term: 3 commitIndex: -1 length of logs: 2 win election
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func one, nd: 3 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
get reply
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
leader2: 2
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 0 term: 3 launch Election
in func LeaderElection, rf: 0 rf.Term: 3 commitIndex: 2 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 4 vote or not: true
in func leaderElection, rf: 0 term: 4 commitIndex: 2 length of logs: 3 win election
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 14 cmd: 14 index: 4
after connect leader2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func Make's goroutine, rf: 2 term: 3 launch Election
in func LeaderElection, rf: 2 rf.Term: 3 commitIndex: -1 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 4 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 4 vote or not: false
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 0 term: 4 vote or not: false
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: false okCnt: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func LeaderElection, rf: 2 rf.Term: 4 commitIndex: 3 length of logs: 4 not become leader, sleep for a while
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 15 index: 5
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 15 cmd: 15 index: 5
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func Make's goroutine, rf: 1 term: 4 launch Election
in func LeaderElection, rf: 1 rf.Term: 4 commitIndex: -1 length of logs: 4 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 5 vote or not: false
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 0 term: 5 vote or not: false
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 5 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func LeaderElection, rf: 1 rf.Term: 5 commitIndex: -1 length of logs: 4 not become leader, sleep for a while
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func Make's goroutine, rf: 0 term: 5 launch Election
in func LeaderElection, rf: 0 rf.Term: 5 commitIndex: 5 length of logs: 6 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 6 vote or not: true
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 6 vote or not: true
in func leaderElection, rf: 0 term: 6 commitIndex: 5 length of logs: 6 win election
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: false okCnt: 1
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 2
in func LeaderElection's goroutine: candidate: 0 state: 1 voter: 2 term: 6 vote or not: false
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 ok: true okCnt: 1
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 6
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: 6
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 16 cmd: 16 index: 8
  ... Passed --  10.9  3  237   68014    8
PASS
ok  	6.824_new/src/raft	10.952s
sleep for a while

Test (2C): basic persistence ...
in func Make's goroutine, rf: 1 term: 0 launch Election
in func LeaderElection, rf: 1 rf.Term: 0 commitIndex: -1 length of logs: 0 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 1 term 1 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 1 term 1 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 1 vote or not: true
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 0 term: 1 vote or not: true
in func leaderElection, rf: 1 term: 1 commitIndex: -1 length of logs: 0 win election
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 , after args, index come
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 1 server: 2
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 1 leader.Term 1
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 1 leader: 1 leader.Term 1
in func AppendEntries, rf: 2 term: 1 state: 3
in func AppendEntries, rf: 2 term: 1 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 1 leader: 1 leader.Term 1
in func AppendEntries, rf: 2 term: 1 state: 3
in func AppendEntries, rf: 2 term: 1 termOfPrevLogIndexInRf: 1
get reply
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 1 leader.Term 1
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 3 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 2
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 1 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 2 term: 1 launch Election
in func LeaderElection, rf: 2 rf.Term: 1 commitIndex: -1 length of logs: 1 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 2 term 2 ok: true okCnt: 1
get reply
in func leaderElection's goroutine, rf: 2 term 2 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 2 vote or not: true
in func leaderElection, rf: 2 term: 2 commitIndex: -1 length of logs: 1 win election
in func LeaderElection's goroutine: candidate: 2 state: 1 voter: 0 term: 2 vote or not: true
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 1
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 1
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func one, nd: 3 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, begin, rf: 0 rf.term: 2 leader: 2 leader.Term 2
in func AppendEntries, rf: 0 term: 2 state: 3
in func AppendEntries, rf: 0 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 begin one loop
leader1: 2
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 2 term: 2 launch Election
in func LeaderElection, rf: 2 rf.Term: 2 commitIndex: -1 length of logs: 2 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 3 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 3 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 3 vote or not: true
in func leaderElection, rf: 2 term: 3 commitIndex: -1 length of logs: 2 win election
in func LeaderElection's goroutine: candidate: 2 state: 1 voter: 0 term: 3 vote or not: true
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , after args, index come
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func one, nd: 3 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
get reply
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
get reply
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
get reply
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 0 term: 3 state: 3
in func AppendEntries, rf: 0 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 2 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 begin one loop
leader2: 2
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 1 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func Make's goroutine, rf: 0 term: 3 launch Election
in func LeaderElection, rf: 0 rf.Term: 3 commitIndex: 2 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 4 vote or not: true
in func leaderElection, rf: 0 term: 4 commitIndex: 2 length of logs: 3 win election
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func one, nd: 0 cmd1: <nil> cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 14 cmd: 14 index: 4
after connect leader2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: false okCnt: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 4 state: 3
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
in func sendAppendEntries: sender: 0 server: 2
get reply
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 15 index: 5
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 15 cmd: 15 index: 5
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func one, nd: 1 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 4 leader: 0 leader.Term 4
in func AppendEntries, rf: 2 term: 4 state: 3
in func AppendEntries, rf: 2 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 4 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func Make's goroutine, rf: 1 term: 4 launch Election
in func LeaderElection, rf: 1 rf.Term: 4 commitIndex: -1 length of logs: 4 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 1 term 5 ok: true okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 2 term: 5 vote or not: false
in func LeaderElection's goroutine: candidate: 1 state: 2 voter: 0 term: 5 vote or not: false
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 5 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 5 state: 3 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
get reply
in func heartbeat2's goroutine, sender: 2 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func LeaderElection, rf: 1 rf.Term: 5 commitIndex: -1 length of logs: 4 not become leader, sleep for a while
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func Make's goroutine, rf: 0 term: 5 launch Election
in func LeaderElection, rf: 0 rf.Term: 5 commitIndex: 5 length of logs: 6 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 1
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 6 vote or not: true
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 6 vote or not: true
in func leaderElection, rf: 0 term: 6 commitIndex: 5 length of logs: 6 win election
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 2 cmd1: 16 cmd: 16 index: 6
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
get reply
in func heartbeat2's goroutine, sender: 2 term 2 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
get reply
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func Call: the request has been sent.
wait for reply
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
get reply
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func Call: the request has been sent.
wait for reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: false okCnt: 1
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 0 term 6 ok: true okCnt: 2
in func LeaderElection's goroutine: candidate: 0 state: 1 voter: 2 term: 6 vote or not: false
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 ok: false okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog fail okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog fail okCnt: 0
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog fail okCnt: 0
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
in func Call: the request has been sent.
wait for reply
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 7
in func one, nd: 0 cmd1: <nil> cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
get reply
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: -2
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 ok: true okCnt: 1
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 4
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func one, nd: 1 cmd1: 16 cmd: 16 index: 8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 2 term: 6 state: 3
in func AppendEntries, rf: 2 term: 6 termOfPrevLogIndexInRf: 6
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 6
in func AppendEntries, rf: 1 term: 6 state: 3
in func AppendEntries, rf: 1 term: 6 termOfPrevLogIndexInRf: 6
get reply
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 6 leader: 0 leader.Term 4
get reply
in func one, nd: 3 cmd1: 16 cmd: 16 index: 8
  ... Passed --   8.8  3  213   61226    8
in func heartbeat2's goroutine, sender: 0 term 6 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
PASS
ok  	6.824_new/src/raft	8.789s
sleep for a while

Test (2C): basic persistence ...
in func Make's goroutine, rf: 2 term: 0 launch Election
in func LeaderElection, rf: 2 rf.Term: 0 commitIndex: -1 length of logs: 0 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 2 term 1 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 2 term 1 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 1 vote or not: true
in func leaderElection, rf: 2 term: 1 commitIndex: -1 length of logs: 0 win election
in func LeaderElection's goroutine: candidate: 2 state: 1 voter: 0 term: 1 vote or not: true
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: -2
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: -2
get reply
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func one, nd: 1 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 1 leader: 2 leader.Term 1
in func AppendEntries, rf: 0 term: 1 state: 3
in func AppendEntries, rf: 0 term: 1 termOfPrevLogIndexInRf: 1
in func AppendEntries, begin, rf: 1 rf.term: 1 leader: 2 leader.Term 1
get reply
in func AppendEntries, rf: 1 term: 1 state: 3
in func AppendEntries, rf: 1 term: 1 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 11 cmd: 11 index: 1
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 0 term: 1 launch Election
in func LeaderElection, rf: 0 rf.Term: 1 commitIndex: -1 length of logs: 1 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 0 term 2 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 0 term 2 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 2 vote or not: true
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 2 vote or not: true
in func leaderElection, rf: 0 term: 2 commitIndex: -1 length of logs: 1 win election
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 1
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
get reply
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 ok: true okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func one, nd: 1 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 12 cmd: 12 index: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func Call: the request has been sent.
wait for reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 1 term: 2 state: 3
in func AppendEntries, rf: 1 term: 2 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 2 rf.term: 2 leader: 0 leader.Term 2
in func AppendEntries, rf: 2 term: 2 state: 3
in func AppendEntries, rf: 2 term: 2 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 begin one loop
leader1: 0
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 0 term: 2 launch Election
in func LeaderElection, rf: 0 rf.Term: 2 commitIndex: -1 length of logs: 2 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 0 term 3 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 0 term 3 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 3 vote or not: true
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 3 vote or not: true
in func leaderElection, rf: 0 term: 3 commitIndex: -1 length of logs: 2 win election
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin go func
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , after args, index come
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 2
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 2
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func one, nd: 1 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
get reply
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func one, nd: 3 cmd1: 13 cmd: 13 index: 3
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
get reply
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
get reply
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func Call: the request has been sent.
wait for reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 2
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, begin, rf: 2 rf.term: 3 leader: 0 leader.Term 3
in func AppendEntries, rf: 2 term: 3 state: 3
in func AppendEntries, rf: 2 term: 3 termOfPrevLogIndexInRf: 3
in func AppendEntries, rf: 1 term: 3 state: 3
in func AppendEntries, rf: 1 term: 3 termOfPrevLogIndexInRf: 3
get reply
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 begin one loop
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 begin one loop
leader2: 0
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 after args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 0 server: 1
in func Call: the request has been sent.
wait for reply
in func sendAppendEntries: sender: 0 server: 2
in func Call: the request has been sent.
wait for reply
in func Make's goroutine, rf: 2 term: 3 launch Election
in func LeaderElection, rf: 2 rf.Term: 3 commitIndex: 2 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
in func leaderElection's goroutine, rf: 2 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 2 state: 2 voter: 1 term: 4 vote or not: true
in func leaderElection, rf: 2 term: 4 commitIndex: 2 length of logs: 3 win election
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin go func
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin go func
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func one, nd: 1 cmd1: 14 cmd: 14 index: 4
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 2 cmd1: 14 cmd: 14 index: 4
after connect leader2
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 3 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 1 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 1 state: 1 receiver: 0 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func Make's goroutine, rf: 0 term: 3 launch Election
in func LeaderElection, rf: 0 rf.Term: 3 commitIndex: -1 length of logs: 3 begin election
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
get reply
get reply
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 1
in func leaderElection's goroutine, rf: 0 term 4 ok: true okCnt: 1
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 2 term: 4 vote or not: false
in func LeaderElection's goroutine: candidate: 0 state: 2 voter: 1 term: 4 vote or not: false
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 0 term 2 state: 1 receiver: 2 sendAppendEntries heartbeat fail okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 ok: false okCnt: 1
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 3
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 ok: true okCnt: 2
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries appendlog succ okCnt: 2
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func LeaderElection, rf: 0 rf.Term: 4 commitIndex: 2 length of logs: 4 not become leader, sleep for a while
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 0 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 0 term: 4 state: 3
in func AppendEntries, rf: 0 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 begin one loop
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, after heartbeat
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 after args, after heartbeat
in func sendAppendEntries: sender: 2 server: 1
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries heartbeat succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 0 cmd1: <nil> cmd: 15 index: 5
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 , after args, index come
in func sendAppendEntries: sender: 2 server: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , before args, index come
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 0 , after args, index come
in func sendAppendEntries: sender: 2 server: 0
in func Call: the request has been sent.
wait for reply
in func Call: the request has been sent.
wait for reply
in func AppendEntries, begin, rf: 1 rf.term: 4 leader: 2 leader.Term 4
in func AppendEntries, rf: 1 term: 4 state: 3
in func AppendEntries, rf: 1 term: 4 termOfPrevLogIndexInRf: 4
get reply
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 ok: true okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 sendAppendEntries appendlog succ okCnt: 1
in func heartbeat2's goroutine, sender: 2 term 4 state: 1 receiver: 1 begin one loop
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
in func one, nd: 1 cmd1: 15 cmd: 15 index: 5
signal: interrupt
FAIL	6.824_new/src/raft	8.012s
